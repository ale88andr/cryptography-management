"""Init tables

Revision ID: cbe5eefa6c5e
Revises: 
Create Date: 2024-09-30 12:31:49.433185

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cbe5eefa6c5e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'cryptography_key_carrier_type',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'cryptography_manufacturer',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'employee_department',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'employee_location_building',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('city', sa.String(length=20), nullable=False),
        sa.Column('street', sa.String(length=40), nullable=False),
        sa.Column('building', sa.String(length=5), nullable=False),
        sa.Column('index', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'employee_organisation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=150), nullable=False),
        sa.Column('short_name', sa.String(length=50), nullable=False),
        sa.Column('city', sa.String(length=20), nullable=False),
        sa.Column('street', sa.String(length=40), nullable=False),
        sa.Column('building', sa.String(length=5), nullable=False),
        sa.Column('index', sa.Integer(), nullable=False),
        sa.Column('chief', sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        sa.UniqueConstraint('short_name'),
    )
    op.create_table(
        'employee_position',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('is_leadership', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'equipment',
        sa.Column('id', sa.String(length=25), nullable=False),
        sa.Column('serial', sa.String(length=50), nullable=False),
        sa.Column('description', sa.String(length=200), nullable=True),
        sa.Column('sticker', sa.String(length=200), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('serial'),
        sa.UniqueConstraint('sticker'),
    )
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(length=50), nullable=False),
        sa.Column('hashed_password', sa.String(length=50), nullable=False),
        sa.Column('is_admin', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'cryptography_key_carrier',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('serial', sa.String(length=50), nullable=False),
        sa.Column('carrier_type_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['carrier_type_id'],
            ['cryptography_key_carrier_type.id'],
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('serial'),
    )
    op.create_table(
        'cryptography_model',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column(
            'type',
            sa.Enum('PROGRAM', 'HARDWARE', 'HARDSOFT', name='modeltypes'),
            nullable=False,
        ),
        sa.Column('manufacturer_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['manufacturer_id'], ['cryptography_manufacturer.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'employee_location',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('building_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['building_id'], ['employee_location_building.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_table(
        'employee',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('surname', sa.String(length=30), nullable=False),
        sa.Column('name', sa.String(length=30), nullable=False),
        sa.Column('middle_name', sa.String(length=30), nullable=False),
        sa.Column('is_worked', sa.Boolean(), nullable=False),
        sa.Column('is_security_staff', sa.Boolean(), nullable=False),
        sa.Column('position_id', sa.Integer(), nullable=False),
        sa.Column('department_id', sa.Integer(), nullable=False),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['department_id'], ['employee_department.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['location_id'], ['employee_location.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['organisation_id'], ['employee_organisation.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['position_id'], ['employee_position.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'cryptography_act_record',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column(
            'action_type',
            sa.Enum(
                'ะก_INSTALL',
                'C_DESTRUCTION',
                'I_INSTALL',
                'I_REMOVE',
                'KD_INSTALL',
                'KD_REMOVE',
                name='actrecordtypes',
            ),
            nullable=False,
        ),
        sa.Column('number', sa.String(length=50), nullable=False),
        sa.Column('reason', sa.String(length=100), nullable=True),
        sa.Column('reason_date', sa.Date(), nullable=True),
        sa.Column('action_date', sa.Date(), nullable=False),
        sa.Column('head_commision_member_id', sa.Integer(), nullable=True),
        sa.Column('commision_member_id', sa.Integer(), nullable=True),
        sa.Column('performer_id', sa.Integer(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['commision_member_id'], ['employee.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['head_commision_member_id'], ['employee.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['performer_id'], ['employee.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('number'),
    )
    op.create_table(
        'cryptography_version',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('version', sa.String(length=50), nullable=False),
        sa.Column(
            'grade',
            sa.Enum('KC1', 'KC2', 'KC3', 'KB1', 'KB2', 'KA1', name='cryptographygrade'),
            nullable=False,
        ),
        sa.Column('serial', sa.String(length=50), nullable=False),
        sa.Column('dist_num', sa.String(length=50), nullable=False),
        sa.Column('certificate', sa.String(length=20), nullable=False),
        sa.Column('certificate_expired_at', sa.Date(), nullable=True),
        sa.Column('received_from', sa.String(length=50), nullable=False),
        sa.Column('received_num', sa.String(length=50), nullable=False),
        sa.Column('received_at', sa.Date(), nullable=False),
        sa.Column('form', sa.String(length=50), nullable=False),
        sa.Column('license', sa.String(length=150), nullable=True),
        sa.Column('model_id', sa.Integer(), nullable=False),
        sa.Column('responsible_user_id', sa.Integer(), nullable=False),
        sa.Column('install_act_record_id', sa.Integer(), nullable=False),
        sa.Column('remove_act_record_id', sa.Integer(), nullable=True),
        sa.Column('comment', sa.String(length=200), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['install_act_record_id'],
            ['cryptography_act_record.id'],
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['model_id'], ['cryptography_model.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['remove_act_record_id'], ['cryptography_act_record.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['responsible_user_id'], ['employee.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'cryptography_key_document',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('serial', sa.String(length=50), nullable=False),
        sa.Column('is_unexpired', sa.Boolean(), nullable=False),
        sa.Column('received_from', sa.String(length=50), nullable=False),
        sa.Column('received_date', sa.Date(), nullable=False),
        sa.Column('cryptography_version_id', sa.Integer(), nullable=False),
        sa.Column('carrier_id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('equipment_id', sa.String(length=25), nullable=False),
        sa.Column('install_act_record_id', sa.Integer(), nullable=False),
        sa.Column('remove_act_record_id', sa.Integer(), nullable=True),
        sa.Column('comment', sa.String(length=200), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['carrier_id'], ['cryptography_key_carrier.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['cryptography_version_id'], ['cryptography_version.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['install_act_record_id'],
            ['cryptography_act_record.id'],
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(['owner_id'], ['employee.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['remove_act_record_id'], ['cryptography_act_record.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('serial'),
    )
    op.create_table(
        'cryptography_hardware_logbook',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('equipment_id', sa.String(length=25), nullable=False),
        sa.Column('happened_at', sa.Date(), nullable=False),
        sa.Column('cryptography_version_id', sa.Integer(), nullable=False),
        sa.Column(
            'record_type',
            sa.Enum(
                'C_INSTALL',
                'C_REMOVE',
                'C_UPDATE',
                'KD_INSTALL',
                'KD_REMOVE',
                'KD_DISCREDIT',
                'C_MAINTANCE',
                'C_FAILURE',
                name='hardwarelogbookrecordtype',
            ),
            nullable=False,
        ),
        sa.Column('key_document_id', sa.Integer(), nullable=True),
        sa.Column('remove_action_id', sa.Integer(), nullable=True),
        sa.Column('removed_at', sa.Date(), nullable=True),
        sa.Column('comment', sa.String(length=200), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['cryptography_version_id'], ['cryptography_version.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['key_document_id'], ['cryptography_key_document.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['remove_action_id'], ['cryptography_act_record.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'cryptography_personal_account',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('happened_at', sa.Date(), nullable=False),
        sa.Column('cryptography_version_id', sa.Integer(), nullable=False),
        sa.Column('key_document_id', sa.Integer(), nullable=False),
        sa.Column('equipment_id', sa.String(length=25), nullable=False),
        sa.Column('install_action_id', sa.Integer(), nullable=True),
        sa.Column('removed_at', sa.Date(), nullable=True),
        sa.Column('remove_action_id', sa.Integer(), nullable=True),
        sa.Column('comment', sa.String(length=200), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['cryptography_version_id'], ['cryptography_version.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['install_action_id'], ['cryptography_act_record.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['key_document_id'], ['cryptography_key_document.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['remove_action_id'], ['cryptography_act_record.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['employee.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cryptography_personal_account')
    op.drop_table('cryptography_hardware_logbook')
    op.drop_table('cryptography_key_document')
    op.drop_table('cryptography_version')
    op.drop_table('cryptography_act_record')
    op.drop_table('employee')
    op.drop_table('employee_location')
    op.drop_table('cryptography_model')
    op.drop_table('cryptography_key_carrier')
    op.drop_table('user')
    op.drop_table('equipment')
    op.drop_table('employee_position')
    op.drop_table('employee_organisation')
    op.drop_table('employee_location_building')
    op.drop_table('employee_department')
    op.drop_table('cryptography_manufacturer')
    op.drop_table('cryptography_key_carrier_type')
    # ### end Alembic commands ###
